{"version":3,"file":"database.js","sourceRoot":"","sources":["../../src/middlewares/database.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;AAC7C,gDAAwB;AAExB,IAAI,EAAO,CAAC;AAEZ,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;IACzB,EAAE,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,GAAG,SAAS,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAEpF,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;QACd,EAAE,CAAC,GAAG,CAAC,yEAAyE,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAMO,8BAAS;AAJlB,MAAM,KAAK,GAAG,GAAG,EAAE;IACf,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AAEkB,sBAAK","sourcesContent":["const sqlite3 = require('sqlite3').verbose();\nimport path from 'path';\n\nlet db: any;\n\nconst connectDB = async () => {\n    db = new sqlite3.Database(path.join(`${__dirname}/../database`, 'participants.db'));\n\n    db.serialize(() => {\n        db.run('CREATE TABLE IF NOT EXISTS participants(firstName TEXT, lastName TEXT )');\n    });\n};\n\nconst getDB = () => {\n    return db;\n};\n\nexport { connectDB, getDB };\n"]}